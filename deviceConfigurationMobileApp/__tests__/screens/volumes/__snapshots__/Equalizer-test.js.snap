// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`on Equalizer screen mounting renders Equalizer screen correctly 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "flexGrow": 1,
      "paddingBottom": 60,
    }
  }
>
  <View>
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#003D7D0D",
          "borderRadius": 4,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginHorizontal": 32,
          "marginTop": 34,
          "paddingHorizontal": 24,
          "paddingVertical": 34,
        }
      }
    >
      <Text
        style={
          {
            "fontFamily": "CenturyGothic",
            "fontSize": 30,
            "fontWeight": "700",
            "lineHeight": undefined,
          }
        }
      >
        [missing "en.bypassEqualizer" translation]
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#003D7D",
            "borderColor": "#003D7D",
            "borderRadius": 4,
            "borderWidth": 1,
            "height": 40,
            "justifyContent": "center",
            "opacity": 1,
            "width": 40,
          }
        }
      >
        <
          height={12}
          width={17}
        />
      </View>
    </View>
    <RCTScrollView
      contentContainerStyle={
        {
          "flexGrow": 1,
          "paddingBottom": 60,
        }
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={0.0001}
      showsVerticalScrollIndicator={false}
      stickyHeaderIndices={[]}
      style={
        {
          "marginTop": 20,
        }
      }
      testID="equalizerVolumeSettingsList"
      viewabilityConfigCallbackPairs={[]}
    >
      <View />
    </RCTScrollView>
    <View>
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#003D7D0D",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginHorizontal": 32,
            "marginTop": 34,
            "paddingHorizontal": 24,
            "paddingVertical": 34,
          }
        }
      >
        <Text
          style={
            {
              "fontFamily": "CenturyGothic",
              "fontSize": 30,
              "fontWeight": "700",
              "lineHeight": undefined,
            }
          }
        >
          [missing "en.automaticNoise" translation]
        </Text>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "#003D7D",
              "borderColor": "#003D7D",
              "borderRadius": 4,
              "borderWidth": 1,
              "height": 40,
              "justifyContent": "center",
              "opacity": 1,
              "width": 40,
            }
          }
        >
          <
            height={12}
            width={17}
          />
        </View>
      </View>
      <View>
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "bottom": 0,
                "opacity": 0,
                "position": "absolute",
                "transform": [
                  {
                    "translateX": 0,
                  },
                  {
                    "translateY": 0,
                  },
                ],
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#484949",
                    "fontFamily": "CenturyGothic",
                    "fontSize": 18,
                    "fontWeight": "700",
                    "lineHeight": 24,
                    "top": 90,
                  },
                  {
                    "marginStart": 12,
                  },
                ]
              }
            >
               db
            </Text>
          </View>
        </View>
        <View
          animateTransitions={true}
          animationType="timing"
          disabled={true}
          onLayout={[Function]}
          onSlidingComplete={[Function]}
          step={1}
          style={
            [
              {
                "height": 40,
                "justifyContent": "center",
              },
              {},
              {
                "alignSelf": "center",
                "width": 646,
              },
            ]
          }
          trackClickable={true}
          trackMarks={[]}
          value={0}
        >
          <View
            onLayout={[Function]}
            renderToHardwareTextureAndroid={true}
            style={
              [
                {
                  "borderRadius": 2,
                  "height": 4,
                },
                {
                  "backgroundColor": "#b3b3b3",
                },
                {
                  "borderRadius": 15,
                  "height": 12,
                },
              ]
            }
          />
          <View
            collapsable={false}
            renderToHardwareTextureAndroid={true}
            style={
              {
                "backgroundColor": "#808284",
                "borderRadius": 15,
                "height": 12,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "width": 0,
              }
            }
          />
          <View
            collapsable={false}
            onLayout={[Function]}
            style={
              {
                "opacity": 0,
                "position": "absolute",
                "transform": [
                  {
                    "translateX": 0,
                  },
                  {
                    "translateY": 0,
                  },
                ],
              }
            }
          >
            <View
              style={
                {
                  "backgroundColor": "#808284",
                  "borderRadius": 4,
                  "height": 36,
                  "width": 36,
                }
              }
            />
          </View>
          <View
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {
                  "marginBottom": -20,
                  "marginLeft": -20,
                  "marginRight": -20,
                  "marginTop": -20,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        {
          "marginBottom": 20,
          "marginStart": 32,
          "marginTop": 40,
        }
      }
    >
      <Text
        style={
          {
            "color": "#484949",
            "fontFamily": "CenturyGothic",
            "fontSize": 26,
            "fontWeight": "700",
            "lineHeight": 30,
          }
        }
      >
        [missing "en.nominalSpeakerImpedance" translation]
      </Text>
      <View
        style={
          {
            "flexDirection": "row",
            "marginTop": 30,
            "width": "100%",
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "marginEnd": 118,
                },
                {
                  "marginEnd": 80,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "borderColor": "#003D7D",
                  "borderRadius": 24,
                  "borderWidth": 2,
                  "height": 48,
                  "justifyContent": "center",
                  "marginEnd": 16,
                  "width": 48,
                }
              }
            >
              <View
                style={
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderRadius": 14,
                    "height": 28,
                    "width": 28,
                  }
                }
              />
            </View>
            <Text
              style={
                {
                  "color": "#808284",
                  "fontFamily": "CenturyGothic-Bold",
                  "fontSize": 26,
                }
              }
            >
              2 
              [missing "en.ohm" translation]
            </Text>
          </View>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "marginEnd": 118,
                },
                {
                  "marginEnd": 80,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "borderColor": "#003D7D",
                  "borderRadius": 24,
                  "borderWidth": 2,
                  "height": 48,
                  "justifyContent": "center",
                  "marginEnd": 16,
                  "width": 48,
                }
              }
            >
              <View
                style={
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderRadius": 14,
                    "height": 28,
                    "width": 28,
                  }
                }
              />
            </View>
            <Text
              style={
                {
                  "color": "#808284",
                  "fontFamily": "CenturyGothic-Bold",
                  "fontSize": 26,
                }
              }
            >
              4 
              [missing "en.ohm" translation]
            </Text>
          </View>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "marginEnd": 118,
                },
                {
                  "marginEnd": 80,
                },
              ]
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "borderColor": "#003D7D",
                  "borderRadius": 24,
                  "borderWidth": 2,
                  "height": 48,
                  "justifyContent": "center",
                  "marginEnd": 16,
                  "width": 48,
                }
              }
            >
              <View
                style={
                  {
                    "backgroundColor": "#FFFFFF",
                    "borderRadius": 14,
                    "height": 28,
                    "width": 28,
                  }
                }
              />
            </View>
            <Text
              style={
                {
                  "color": "#808284",
                  "fontFamily": "CenturyGothic-Bold",
                  "fontSize": 26,
                }
              }
            >
              8 
              [missing "en.ohm" translation]
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
